(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'NoneType' object has no attribute 'id'"
p3
sS'layer'
p4
S'/home/chaitanya/STUDY/web2py/applications/feedback/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n#########################################################################\n\n#@auth.requires_membership(\'admin\')\n\ndef display_users():\n    list = db(db.auth_user).select()\n    return locals()\n\ndef show_user():\n    user_id = request.args(0,cast=int)\n    #print user_id\n    user_detail = db(db.auth_user.id==user_id).select()\n    tp=db.executesql("SELECT group_id FROM auth_membership WHERE user_id=\'%d\'" % (int(user_id)))\n    #print tp[0][0]\n    return locals()\n\ndef add_details():\n    form1=SQLFORM(db.sets_table).process()\n    form2=SQLFORM(db.set_question).process()\n    form3=SQLFORM(db.specificQuestion_course).process()\n    return locals()\n\ndef feedback():\n    list = db(db.set_question).select()\n    form = SQLFORM(list[0])\n    for i in list[1:]:\n        temp2 = SQLFORM(i)\n        form.append(temp2)\n    return locals()\n\ndef make_faculty():\n    user_id = request.args(0,cast=int)\n    #user = db.auth_user[user_id]\n    # db.executesql("UPDATE auth_membership SET group_id=\'%d\' WHERE id=\'%d\'" % (1,int(user_id)))\n    #id = db.auth_membership.insert(group_id=1,user_id=user_id)\n    auth.add_membership(8,user_id)\n    auth.del_membership(9,user_id)\n    redirect(URL(\'show_user\',args=user_id))\n\ndef test():\n    list = db(db.set_question).select()\n    form = []\n    db.answers.student_id.default = auth.user.id\n    db.answers.course_id.default = 1\n    for item in list:\n        db.answers.question_id.default = item.id\n        form.append(SQLFORM(db.answers).process())\n    return dict(form=form)\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n\n    if you need a simple wiki simply replace the two lines below with:\n    return auth.wiki()\n    """\n    response.flash = T("Hello World")\n    return dict(message=T(\'Welcome to web2py!\'))\n\ndef __add_user_membership(form):\n         #group_id = auth.id_group(role=form.vars.user_type)\n         #user_id = form.vars.id\n         auth.add_membership(9,auth.user_id)\n\ndef user():\n    auth.settings.register_onaccept = __add_user_membership\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/bulk_register\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    also notice there is http://..../[app]/appadmin/manage/auth to allow administrator to manage users\n    """\n    return dict(form=auth())\n\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\nresponse._vars=response._caller(test)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/chaitanya/STUDY/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/chaitanya/STUDY/web2py/applications/feedback/controllers/default.py", line 111, in <module>\n  File "/home/chaitanya/STUDY/web2py/gluon/globals.py", line 412, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/chaitanya/STUDY/web2py/applications/feedback/controllers/default.py", line 51, in test\n    db.answers.student_id.default = auth.user.id\nAttributeError: \'NoneType\' object has no attribute \'id\'\n'
p11
s.